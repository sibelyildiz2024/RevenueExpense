@inject NavigationManager NavigationManager
@page "/incomeAdd"
@using MauiAppBlazor3.Models
@using MauiAppBlazor3.Services
@inject IInComeDebtItemService InComeDebtItemService
@inject IIncomeService IncomeService
@inject NavigationManager NavigationManager

<div class="row mb-3">
	<div class="col-sm-10">
		<h3>Add Revenue</h3>
	</div>
</div>

<div class="row mb-3">
	<div class="col-sm-10">
		<InputDate class="form-control" @bind-Value="incomeModel.InComeDate"></InputDate>
	</div>
</div>
<div class="row mb-3">
	<div class="col-sm-10">
		<div class="input-group">
			<select class="form-select" aria-label="Kategori Seçiniz" @bind="incomeModel.IncomeDebtItemId">
				<option value="0" selected>Choose Category</option>

				@foreach (var item in incomeSourceList)
				{
					<option value="@item.Id">@item.Name</option>
				}
			</select>
			<button class="btn btn-outline-success" type="button" @onclick="NavigateAddIncomeSourcePage">+</button>
		</div>
	</div>
</div>
<div class="row mb-3">
	<div class="col-sm-10">
		<div class="input-group">
			<input type="number" class="form-control" @bind="incomeModel.InComeAmount">
			<span class="input-group-text">$</span>
			<span class="input-group-text">0,00</span>
			<button class="btn btn-outline-success" type="button" @onclick="SaveData">Save</button>
		</div>
	</div>
</div>
<div class="row mb-3">
	<div class="col-sm-10">
		<p style="color:red">@ValidationError</p>
	</div>
</div>
@code {

	private List<IncomeDebtItemModel> incomeSourceList = new List<IncomeDebtItemModel>();
	IncomeModel incomeModel = new();
	public string? ValidationError;

	protected override async Task OnInitializedAsync()
	{
		incomeSourceList = await InComeDebtItemService.GetAllIncomeSourceAsync();
		incomeModel.InComeDate = DateTime.Now;
	}

	private void NavigateAddIncomeSourcePage()
	{
		NavigationManager.NavigateTo("/incomedebtsource/0");
	}

	private async Task SaveData()
	{
		if (incomeModel.IncomeDebtItemId != 0 && incomeModel.InComeAmount != 0)
		{
			var addedRow = await IncomeService.Insert(incomeModel);
			if (addedRow == 1)
			{
				NavigationManager.NavigateTo("/incomelist");
			}
			else
			{
				await App.Current.MainPage.DisplayAlert(
					"Alert",
					"An error has occurred. Please contact the system administrator",
					"Ok");
			}
		}
		else
		{
				ValidationError = "*Please enter the Amount field and chose the Category.";
		}
	}
}
